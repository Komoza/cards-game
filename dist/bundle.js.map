{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://find-a-couple/webpack/bootstrap","webpack://find-a-couple/webpack/runtime/define property getters","webpack://find-a-couple/webpack/runtime/hasOwnProperty shorthand","webpack://find-a-couple/./components/difficulty/difficulty-component.js","webpack://find-a-couple/./components/game/game.js","webpack://find-a-couple/./index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { goToPage } from '../../index.js';\n\nexport let difficulty = 0;\n\nexport const DifficultyPage = (app) => {\n    difficulty = 0;\n    app.innerHTML = `\n  <div class=\"container\">\n    <div class=\"difficulty\">\n      <h2 class=\"difficulty__text\">Выбери сложность</h2>\n      <form class=\"difficulty__form\">\n        <div class=\"difficulty__value-wrap\">\n          <label class=\"difficulty__value\">\n            <input type=\"radio\" name=\"difficulty\" value=\"1\">\n            <span>1</span>\n          </label>\n          <label class=\"difficulty__value\">\n            <input type=\"radio\" name=\"difficulty\" value=\"2\">\n            <span>2</span>\n          </label>\n          <label class=\"difficulty__value\">\n            <input type=\"radio\" name=\"difficulty\" value=\"3\">\n            <span>3</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"difficulty__start\">Старт</button>\n      </form>\n      </div>\n  </div>\n`;\n\n    // Перехватываем событие отправки формы\n    document\n        .querySelector('.difficulty__form')\n        .addEventListener('submit', (event) => {\n            // Отменяем стандартное поведение формы\n            event.preventDefault();\n\n            const radioButtons = document.querySelectorAll(\n                '.difficulty__value input[type=\"radio\"]'\n            );\n            for (let radioButton of radioButtons) {\n                if (radioButton.checked) {\n                    difficulty = radioButton.value;\n                    goToPage('Game');\n                    break;\n                }\n            }\n            if (!difficulty) {\n                alert('выберите сложность');\n            }\n        });\n\n    // Рисуем видимость выбраного компонента\n    const difValues = document.querySelectorAll('.difficulty__value');\n    const startButton = document.querySelector('.difficulty__start');\n    difValues.forEach((difValue) => {\n        difValue.addEventListener('click', () => {\n          startButton.classList.add('new-game--active');\n            document\n                .querySelector('.difficulty__value--active')\n                ?.classList.remove('difficulty__value--active');\n            difValue.classList.add('difficulty__value--active');\n        });\n    });\n};\n","import { goToPage } from '../../index.js';\nimport { difficulty } from '../difficulty/difficulty-component.js';\n\nlet arrCards = [];\nconst getSuit = (num) => {\n    switch (num) {\n        case 1:\n            return 'spades';\n        case 2:\n            return 'hearts';\n        case 3:\n            return 'diamonds';\n        case 4:\n            return 'clubs';\n        default:\n            return 'error';\n    }\n};\nconst getRank = (num) => {\n    switch (num) {\n        case 6:\n            return 'six';\n        case 7:\n            return 'seven';\n        case 8:\n            return 'eight';\n        case 9:\n            return 'nine';\n        case 10:\n            return 'ten';\n        case 11:\n            return 'jack';\n        case 12:\n            return 'queen';\n        case 13:\n            return 'king';\n        case 14:\n            return 'ace';\n        default:\n            return 'error';\n    }\n};\nconst checkTheWin = () => {\n    const cards = document.querySelectorAll('.game__card');\n    for (let card of cards) {\n        if (card.dataset.status !== 'open') {\n            return false;\n        }\n    }\n    return true;\n};\nconst checkTheCuple = (firstOpenCard, secondOpenCard) => {\n    if (firstOpenCard.value !== secondOpenCard.value) {\n        alert('Вы проиграли');\n        goToPage('Difficulty');\n    } else {\n        firstOpenCard.nod.setAttribute('data-status', 'open');\n        secondOpenCard.nod.setAttribute('data-status', 'open');\n\n        if (checkTheWin()) {\n            alert('Вы победили');\n            goToPage('Difficulty');\n        } else {\n            firstOpenCard.value = '';\n            firstOpenCard.nod = null;\n\n            secondOpenCard.value = '';\n            secondOpenCard.nod = null;\n        }\n    }\n};\n\nconst startGame = () => {\n    let firstOpenCard = {\n        value: '',\n        nod: null,\n    };\n    let secondOpenCard = {\n        value: '',\n        nod: null,\n    };\n    // актвируем кнопку Начать заново\n    const newGame = document.querySelector('.new-game');\n    newGame.classList.add('new-game--active');\n    newGame.addEventListener('click', () => {\n        goToPage('Difficulty');\n    });\n\n    // запуск таймера\n    const min = document.querySelector('.timer__counter--min');\n    const sec = document.querySelector('.timer__counter--sec');\n\n    let second = '';\n    let minute = '';\n    setInterval(() => {\n        second = Number(sec.innerHTML) + 1;\n        if (second < 60) {\n            sec.innerHTML = Number(second) < 10 ? '0' + second : second;\n        } else {\n            minute = Number(min.innerHTML) + 1;\n            min.innerHTML = Number(minute) < 10 ? '0' + minute : minute;\n            sec.innerHTML = '00';\n        }\n    }, 1000);\n\n    // Ивент на клик карты\n    const cards = document.querySelectorAll('.game__card');\n    cards.forEach((card) => {\n        card.addEventListener('click', () => {\n            // проверка, чтобы ивент не отрабатывал на уже открытые карты\n            if (card.dataset.status !== 'open') {\n                card.setAttribute('src', `./images/${card.dataset.value}.jpg`);\n                // если первая карта открыта переворачиваем вторую и проверяем пара ли это\n                if (!firstOpenCard.value) {\n                    firstOpenCard.value = card.dataset.value;\n                    firstOpenCard.nod = card;\n                } else {\n                    secondOpenCard.value = card.dataset.value;\n                    secondOpenCard.nod = card;\n                    checkTheCuple(firstOpenCard, secondOpenCard);\n                }\n            }\n        });\n    });\n};\nconst fillCardsArray = (numbers) => {\n    // генерация карт\n    let rank = '';\n    let suit = '';\n    for (let i = 0; i < numbers / 2; i++) {\n        // проверка на больше одной пары одинаковых карт в игре\n        do {\n            rank = getRank(Math.floor(Math.random() * 9) + 6);\n            suit = getSuit(Math.floor(Math.random() * 4) + 1);\n        } while (\n            arrCards.includes(\n                `<img data-value=\"${rank}-of-${suit}\" class=\"game__card\" src=\"./images/${rank}-of-${suit}.jpg\" alt=\"card\"/>`\n            )\n        );\n\n        let card = `<img data-value=\"${rank}-of-${suit}\" class=\"game__card\" src=\"./images/${rank}-of-${suit}.jpg\" alt=\"card\"/>`;\n        arrCards.push(card);\n\n        // добавляем пару\n        let index = Math.floor(Math.random() * numbers) + 1;\n\n        // поиск случайного места для пары\n        let isFindSlot = false;\n        while (!isFindSlot) {\n            if (!arrCards[index]) {\n                arrCards[index] = card;\n                isFindSlot = true;\n            } else if (index === numbers) {\n                index = 1;\n            } else {\n                index++;\n            }\n        }\n    }\n\n    // переворачиваем карты, рубашкой вверх\n    setTimeout(() => {\n        const cards = document.querySelectorAll('.game__card');\n        cards.forEach((card) => {\n            card.setAttribute('src', './images/dealer-shirt.jpg');\n        });\n    }, 5000);\n};\n\nexport const Game = (app) => {\n    // опции сложности\n    arrCards = [];\n    switch (difficulty) {\n        case '1':\n            fillCardsArray(6);\n            break;\n        case '2':\n            fillCardsArray(12);\n            break;\n        case '3':\n            fillCardsArray(18);\n            break;\n        default:\n            break;\n    }\n\n    app.innerHTML = `\n    <div class=\"container\">\n        <div class=\"game\">\n            <div class=\"header\">\n                <div class=\"timer\">\n                    <div class=\"timer__text\">\n                        <div class=\"timer__text-min\">min</div>\n                        <div class=\"timer__text-sec\">sec</div>\n                    </div>\n                    <div class=\"timer__counter\">\n                    <span class=\"timer__counter--min\">00</span>.<span class=\"timer__counter--sec\">00</span></div>\n                </div>\n                <button class=\"new-game\">Начать заново</button>\n            </div>\n\n            <main class=\"game-wrap\">\n                <div class=\"game__field\">\n                    ${arrCards.map((card) => card).join('')}\n                </div>\n            </main>\n        </div>\n    </div>\n  `;\n\n    // Запуск игры, активность кнопок и запуск таймера после предпоказа карт\n    setTimeout(startGame, 5000);\n};\n","import { DifficultyPage } from './components/difficulty/difficulty-component.js';\nimport { Game } from './components/game/game.js';\nimport \"./styles/index.css\";\n\nconst app = document.getElementById('root');\nlet page = 'Difficulty';\n\nexport const goToPage = (newPage) => {\n    page = newPage;\n    renderApp();\n};\n\nconst renderApp = () => {\n    switch (page) {\n        case 'Difficulty':\n            DifficultyPage(app);\n            break;\n        case 'Game':\n            Game(app);\n            break;\n        default:\n            console.log('404');\n            break;\n    }\n};\n\n// start\nrenderApp();\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","difficulty","arrCards","getSuit","num","getRank","startGame","firstOpenCard","value","nod","secondOpenCard","newGame","document","querySelector","classList","add","addEventListener","goToPage","min","sec","second","minute","setInterval","Number","innerHTML","querySelectorAll","forEach","card","dataset","status","setAttribute","alert","cards","checkTheWin","checkTheCuple","fillCardsArray","numbers","rank","suit","i","Math","floor","random","includes","push","index","isFindSlot","setTimeout","app","getElementById","page","newPage","renderApp","event","preventDefault","radioButtons","radioButton","checked","difValues","startButton","difValue","remove","DifficultyPage","map","join","Game","console","log"],"sourceRoot":""}